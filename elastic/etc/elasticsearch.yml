# ======================== Elasticsearch Configuration =========================
#
# NOTE: Elasticsearch comes with reasonable defaults for most settings.
#       Before you set out to tweak and tune the configuration, make sure you
#       understand what are you trying to accomplish and the consequences.
#
# The primary way of configuring a node is via this file. This template lists
# the most important settings you may want to configure for a production cluster.
#
# Please see the documentation for further information on configuration options:
# <http://www.elastic.co/guide/en/elasticsearch/reference/current/setup-configuration.html>
#
# ---------------------------------- Cluster -----------------------------------
#
# Use a descriptive name for your cluster:
#
cluster.name: ${ES235_CLUSTER_NAME}
#
# ------------------------------------ Node ------------------------------------
#
# Use a descriptive name for the node:
#
node.name: ${HOSTNAME}
#
# Add custom attributes to the node:
#
# node.rack: r1
node.master: true
#
# Allow this node to store data (enabled by default):
#
node.data: true
index.number_of_shards: 1

# Set the number of replicas (additional copies) of an index (1 by default):
#
index.number_of_replicas: 2
#
# ----------------------------------- Paths ------------------------------------
#
# Path to directory where to store the data (separate multiple locations by comma):
#
path.conf: /data/elastic235/etc


path.data: /data/elastic235/data
#
path.work: /data/elastic235/tmp
path.logs: /data/elastic235/log

path.repo: ["/backup"]
repositories.url.allowed_urls: ["file:///backup/*"]

#
# ----------------------------------- Memory -----------------------------------
#
# Lock the memory on startup:
#
bootstrap.mlockall: false
#
# Make sure that the `ES_HEAP_SIZE` environment variable is set to about half the memory
# available on the system and that the owner of the process is allowed to use this limit.
#
# Elasticsearch performs poorly when the system is swapping the memory.
#
# ---------------------------------- Network -----------------------------------
#
# Set the bind address to a specific IP (IPv4 or IPv6):
#
network.bind_host: ${HOSTNAMEFULL}
network.publish_host: ${HOSTNAMEFULL}
http.bind_host: ${HOSTNAMEFULL}
http.publish_host: ${HOSTNAMEFULL}

#
# Set a custom port for HTTP:
#
http.port: ${HTTP_PORT_235}
transport.tcp.port: ${TRANSPORT_PORT_235}

#
# For more information, see the documentation at:
# <http://www.elastic.co/guide/en/elasticsearch/reference/current/modules-network.html>
#
# --------------------------------- Discovery ----------------------------------
#
# Pass an initial list of hosts to perform discovery when new node is started:
# The default list of hosts is ["127.0.0.1", "[::1]"]
#
discovery.zen.ping.unicast.hosts: [${ES_HOSTS}]
discovery.zen.ping.timeout: 30s
#
# Prevent the "split brain" by configuring the majority of nodes (total number of nodes / 2 + 1):
#
discovery.zen.minimum_master_nodes: 2
#
# For more information, see the documentation at:
# <http://www.elastic.co/guide/en/elasticsearch/reference/current/modules-discovery.html>
#
# ---------------------------------- Gateway -----------------------------------
#
# Block initial recovery after a full cluster restart until N nodes are started:
#
# gateway.recover_after_nodes: 3
#
# For more information, see the documentation at:
# <http://www.elastic.co/guide/en/elasticsearch/reference/current/modules-gateway.html>
#
# ---------------------------------- Various -----------------------------------
#
# Disable starting multiple nodes on a single system:
#
# node.max_local_storage_nodes: 1
#
# Require explicit names when deleting indices:
#
action.destructive_requires_name: true

script.engine.groovy.inline.search: on
script.engine.groovy.inline.aggs: on

readonlyrest:
    # Activate Plugin
    enable: true
    ssl:
      enable: true
      keystore_file: "${KEYSTORE_FILE}"
      keystore_pass: ${KEYSTORE_PASS}
      key_pass: ${KEY_PASS}
      
    # HTTP response body in case of forbidden request.
    # If this is null or omitted, the name of the first violated access control rule is returned (useful for debugging!)
    response_if_req_forbidden: denied by ES 2.3.5 plugin v1.10.0

    # Default policy is to forbid everything, let's define a whitelist
    # Rules are matched in order
    access_control_rules:

    # from these IP addresses, accept any method, any URI, any HTTP body
    - name: full access to internal servers
      type: allow
      ## Stage Hosts
      ##hosts: [local, nutch, node 1, node 2, node 3, prod bastion (for web requests)]
      hosts: [${INTERNAL_SERVERS}]

    # from these IP addresses, accept any method, any URI, any HTTP body
    - name: full access to internal servers from temporary dev VMs
      type: allow
      ## Min & Bryan's Dev VM
      hosts: [${DEVELOPER_PC}]
      
    - name: bestbet loader test  
      auth_key: ${ADMIN_AUTH_KEY}
      type: allow

    - name: bestbet, sitewideapi   
      auth_key: ${READONLY_AUTH_KEY}
      type: allow
      methods: [POST]
      uri_re: [cgov/_search/template, bestbets/_search/template, autosg/_search/template]
      
    # From web servers, allow search template for CGov
    - name: restricted access to cgov search template
      type: allow
      methods: [POST]
      uri_re: cgov/_search/template
      ## Basically all WCMS web servers
      #Dev VM {01-15}, Web Servers (nci-ws) BLUE, RED, PINK, QA, DT, STAGE, PROD
      hosts: [${WEB_SERVERS}]
      ## No maxBodyLength for this request - search template requires a body

    # From external hosts, accept only GET and OPTION methods only, for all other requests, if the HTTP requqest body is empty
    - name: restricted access to all other hosts
      type: allow
      methods: [OPTIONS,GET,HEAD]
      maxBodyLength: 0

      
